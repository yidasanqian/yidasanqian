<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yidasanqian&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yidasanqian.github.io/"/>
  <updated>2019-04-04T06:11:53.058Z</updated>
  <id>https://yidasanqian.github.io/</id>
  
  <author>
    <name>yidasanqian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Rabbitmq Network Partitions 网络分区解决方案</title>
    <link href="https://yidasanqian.github.io/2019/04/04/Rabbitmq-Network-Partitions-%E7%BD%91%E7%BB%9C%E5%88%86%E5%8C%BA%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://yidasanqian.github.io/2019/04/04/Rabbitmq-Network-Partitions-网络分区解决方案/</id>
    <published>2019-04-04T02:44:00.241Z</published>
    <updated>2019-04-04T06:11:53.058Z</updated>
    
    <content type="html"><![CDATA[<p>高可用集群环境（镜像模式）：</p><p>双节点：<br>rabbit@rabbit1（master）、rabbit@rabbit2（slave）</p><p>集群设置：</p><p>rabbit1控制台：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl reset</span><br><span class="line">rabbitmqctl start_app</span><br></pre></td></tr></table></figure></p><p>将节点2加入到集群，rabbit2控制台：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl reset</span><br><span class="line">rabbitmqctl join_cluster --ram rabbit@rabbit1</span><br><span class="line">rabbitmqctl start_app</span><br></pre></td></tr></table></figure></p><blockquote><p>参数“–ram”表示设置为内存节点，忽略此参数则默认为磁盘节点。可以用命令<code>rabbitmqctl change_cluster_node_type disc</code><br>改变节点类型，需要注意的是集群环境中至少有一个为磁盘节点</p></blockquote><p>最后查看集群状态：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@rabbit2:/# rabbitmqctl cluster_status</span><br><span class="line">Cluster status of node rabbit@rabbit2 ...</span><br><span class="line">[&#123;nodes,[&#123;disc,[rabbit@rabbit1]&#125;,&#123;ram,[rabbit@rabbit2]&#125;]&#125;,</span><br><span class="line"> &#123;running_nodes,[rabbit@rabbit1,rabbit@rabbit2]&#125;,</span><br><span class="line"> &#123;cluster_name,&lt;&lt;&quot;rabbit@rabbit-cluster&quot;&gt;&gt;&#125;,</span><br><span class="line"> &#123;partitions,[]&#125;,</span><br><span class="line"> &#123;alarms,[&#123;rabbit@rabbit1,[]&#125;,&#123;rabbit@rabbit2,[]&#125;]&#125;]</span><br></pre></td></tr></table></figure></p><p>首先解决网络分区导致队列不可用的问题，需要先设置队列的高可用策略，<br>在任意mq节点控制台执行命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl set_policy -p / ha-all &quot;^&quot; &apos;&#123;&quot;ha-mode&quot;:&quot;all&quot;,&quot;ha-sync-mode&quot;:&quot;automatic&quot;&#125;&apos;</span><br></pre></td></tr></table></figure></p><p>-p 指定vhost<br>“^” 指定策略匹配到所有队列</p><p>然后进入rabbit1控制台，编辑mq配置分区恢复处理策略：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@rabbit1:/# vim /etc/rabbitmq/rabbitmq.conf</span><br></pre></td></tr></table></figure></p><p>添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">## 指定网络分区处理策略</span><br><span class="line">cluster_partition_handling = pause_if_all_down</span><br><span class="line"></span><br><span class="line">## Recovery strategy. Can be either &apos;autoheal&apos; or &apos;ignore&apos;</span><br><span class="line">cluster_partition_handling.pause_if_all_down.recover = autoheal</span><br><span class="line"></span><br><span class="line">## Node names to check</span><br><span class="line">cluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@rabbit1</span><br><span class="line">cluster_partition_handling.pause_if_all_down.nodes.2 = rabbit@rabbit2</span><br></pre></td></tr></table></figure></p><p>RabbitMQ提供了4种处理网络分区的方式：</p><ol><li>ignore 默认，RabbitMQ不会自动做任何处理，即需要手动处理。</li><li>pause_minority 这种处理方式适合集群节点数大于2个且最好为奇数的情况，因为当网络恢复时，有可能两个节点会自动启动恢复网络分区，也有可能还是保持关闭状态。</li><li>pause_if_all_down, [nodes], ignore|autoheal RabbitMQ会自动关闭不能和[nodes]中节点通信的节点。</li><li>autoheal RabbitMQ会自动决定一个获胜的（winning）分区，然后重启不在这个分区中的节点以恢复网络分区。</li></ol><p>最后重启节点1，使策略生效。</p><p>参考：<br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTMyNTY4MTYvYXJ0aWNsZS9kZXRhaWxzLzczNzU3ODg0" title="https://blog.csdn.net/u013256816/article/details/73757884">https://blog.csdn.net/u013256816/article/details/73757884<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;高可用集群环境（镜像模式）：&lt;/p&gt;
&lt;p&gt;双节点：&lt;br&gt;rabbit@rabbit1（master）、rabbit@rabbit2（slave）&lt;/p&gt;
&lt;p&gt;集群设置：&lt;/p&gt;
&lt;p&gt;rabbit1控制台：&lt;br&gt;&lt;figure class=&quot;highlight pl
      
    
    </summary>
    
      <category term="RabbitMQ" scheme="https://yidasanqian.github.io/categories/RabbitMQ/"/>
    
    
      <category term="RabbitMQ" scheme="https://yidasanqian.github.io/tags/RabbitMQ/"/>
    
      <category term="Network Partitions" scheme="https://yidasanqian.github.io/tags/Network-Partitions/"/>
    
      <category term="网络分区" scheme="https://yidasanqian.github.io/tags/%E7%BD%91%E7%BB%9C%E5%88%86%E5%8C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="https://yidasanqian.github.io/2019/04/03/hello-world/"/>
    <id>https://yidasanqian.github.io/2019/04/03/hello-world/</id>
    <published>2019-04-03T10:44:32.637Z</published>
    <updated>2019-04-04T08:48:35.462Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==" title="https://hexo.io/">Hexo<i class="fa fa-external-link"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv" title="https://hexo.io/docs/">documentation<i class="fa fa-external-link"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=" title="https://hexo.io/docs/troubleshooting.html">troubleshooting<i class="fa fa-external-link"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==" title="https://github.com/hexojs/hexo/issues">GitHub<i class="fa fa-external-link"></i></span>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s" title="https://hexo.io/docs/writing.html">Writing<i class="fa fa-external-link"></i></span></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=" title="https://hexo.io/docs/server.html">Server<i class="fa fa-external-link"></i></span></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s" title="https://hexo.io/docs/generating.html">Generating<i class="fa fa-external-link"></i></span></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZGVwbG95bWVudC5odG1s" title="https://hexo.io/docs/deployment.html">Deployment<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9oZXhvLmlvLw==&quot; title=&quot;https://hexo.io/&quot;&gt;Hexo&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/spa
      
    
    </summary>
    
      <category term="other" scheme="https://yidasanqian.github.io/categories/other/"/>
    
    
      <category term="hexo" scheme="https://yidasanqian.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
